// Generated by CoffeeScript 1.6.3
(function() {
  var defineMagicStep, wrap;

  module.exports = defineMagicStep = function(defineStep) {
    return function(pattern, body) {
      return defineStep(pattern, wrap(body));
    };
  };

  wrap = function(body) {
    return function() {
      var args, callback, e, retval;
      args = Array.prototype.slice.call(arguments);
      callback = args[args.length - 1];
      retval = void 0;
      try {
        retval = body.apply(this, args);
      } catch (_error) {
        e = _error;
        console.log(e);
        callback.fail(e);
        return;
      }
      if (args.length === body.length) {
        return retval;
      }
      if (retval && retval.then) {
        retval.then((function() {
          return callback();
        }), (function(e) {
          return callback.fail(e);
        }));
        return;
      }
      return callback();
    };
  };

  function wrapCallback(callback) {
    var flow = browser.controlFlow(),
      cb = function() {
        flow.removeListener('uncaughtException', uncaughtException);
        return callback();
      };

    // Forward callback functions to the original callback
    _.functions(callback).forEach(function(fn) {
      cb[fn] = function() {
        flow.removeListener('uncaughtException', uncaughtException);
        return callback[fn].apply(callback, arguments);
      };
    });

    function uncaughtException(e) {
      console.error('WebDriver.FlowControl ' + e);
      cb.fail(e);
    }

    flow.addListener('uncaughtException', uncaughtException);

    return cb;
  }

}).call(this);
